---
const slides = [
  {
    imagen: "/images/taxi-hero-02.jpg",
    titulo: "Viví Cataratas del Iguazú",
    subtitulo: "Recorré los circuitos argentino y brasileño con guías locales.",
    cta: "Explorar Tours"
  },
  {
    imagen: "/images/cataradas_del_iguazu-hero-01.jpg",
    titulo: "Descubrí la Magia Natural",
    subtitulo: "Experiencias únicas en el corazón de la selva misionera.",
    cta: "Ver Destinos"
  },
  {
    imagen: "/images/triple-frontera-hero-03.webp",
    titulo: "Triple Frontera",
    subtitulo: "Argentina, Brasil y Paraguay en un solo viaje inolvidable.",
    cta: "Reservar Ahora"
  }
];
---

<section class="relative h-[60vh] md:h-[75vh] overflow-hidden">
  <div id="heroTrack" class="flex transition-transform duration-700 ease-in-out h-full">
    {slides.map((slide, index) => (
      <div class="min-w-full h-full bg-cover bg-center relative" style={`background-image: url('${slide.imagen}')`}>
        <div class="absolute inset-0 bg-gradient-to-r from-black/60 via-black/30 to-transparent"></div>
        <div class="relative h-full flex items-center">
          <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 w-full">
            <div class="max-w-2xl text-white">
              <h1 class="text-4xl md:text-6xl lg:text-7xl font-bold mb-4 leading-tight">
                {slide.titulo}
              </h1>
              <p class="text-lg md:text-xl lg:text-2xl mb-8 font-light leading-relaxed">
                {slide.subtitulo}
              </p>
              <button class="inline-flex items-center gap-2 bg-accent hover:bg-darkAccent text-primary px-8 py-4 rounded-xl font-semibold text-lg transition-all duration-200 shadow-lg hover:shadow-xl transform hover:scale-105">
                {slide.cta}
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
                </svg>
              </button>
            </div>
          </div>
        </div>
      </div>
    ))}
  </div>

  <!-- Indicadores -->
  <div class="absolute bottom-6 left-1/2 transform -translate-x-1/2 flex items-center gap-3">
    {slides.map((_, index) => (
      <button 
        class={`heroDot w-3 h-3 rounded-full transition-all duration-300 ${index === 0 ? 'bg-accent scale-125' : 'bg-white/50 hover:bg-white/70'}`}
        data-slide={index}
      ></button>
    ))}
  </div>

  <!-- Navegación -->
  <button id="prevBtn" class="absolute left-4 top-1/2 transform -translate-y-1/2 bg-white/20 hover:bg-white/30 text-white p-3 rounded-full backdrop-blur-sm transition-all duration-200">
    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
    </svg>
  </button>
  
  <button id="nextBtn" class="absolute right-4 top-1/2 transform -translate-y-1/2 bg-white/20 hover:bg-white/30 text-white p-3 rounded-full backdrop-blur-sm transition-all duration-200">
    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
    </svg>
  </button>

  <script>
    const track = document.getElementById("heroTrack");
    const dots = document.querySelectorAll(".heroDot");
    const prevBtn = document.getElementById("prevBtn");
    const nextBtn = document.getElementById("nextBtn");
    const totalSlides = dots.length;
    let currentSlide = 0;
    let autoplayInterval;

    function goToSlide(index) {
      currentSlide = index % totalSlides;
      if (currentSlide < 0) currentSlide = totalSlides - 1;
      
      track.style.transform = `translateX(-${currentSlide * 100}%)`;
      
      // Actualizar indicadores
      dots.forEach((dot, idx) => {
        dot.classList.toggle("bg-accent", idx === currentSlide);
        dot.classList.toggle("scale-125", idx === currentSlide);
        dot.classList.toggle("bg-white/50", idx !== currentSlide);
        dot.classList.toggle("scale-100", idx !== currentSlide);
      });
    }

    function nextSlide() {
      goToSlide(currentSlide + 1);
    }

    function prevSlide() {
      goToSlide(currentSlide - 1);
    }

    function startAutoplay() {
      autoplayInterval = setInterval(nextSlide, 5000);
    }

    function stopAutoplay() {
      clearInterval(autoplayInterval);
    }

    // Event listeners
    dots.forEach((dot, index) => {
      dot.addEventListener("click", () => {
        stopAutoplay();
        goToSlide(index);
        startAutoplay();
      });
    });

    nextBtn.addEventListener("click", () => {
      stopAutoplay();
      nextSlide();
      startAutoplay();
    });

    prevBtn.addEventListener("click", () => {
      stopAutoplay();
      prevSlide();
      startAutoplay();
    });

    // Pausar en hover
    const hero = document.querySelector("section");
    hero.addEventListener("mouseenter", stopAutoplay);
    hero.addEventListener("mouseleave", startAutoplay);

    // Inicializar
    startAutoplay();
    goToSlide(0);
  </script>
</section>  